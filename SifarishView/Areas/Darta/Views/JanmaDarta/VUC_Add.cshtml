@model SifarishView.Areas.Darta.Models.JanmaDartaViewModel

<script src="@Url.Content("~/Scripts/jquery-1.7.1.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<script>
    var s = jQuery.noConflict();
    //panji
    s(document).ready(function () {
        s("#PanjiState").change(function () {
            debugger;
            var stateId = parseInt(s("#PanjiState").val());
            var districtId = s("#PanjiDistrict");
        districtId.empty(); // this line is for clear all items from State dropdown
        districtId.append($("<option></option>").val("").html("-Please Select-"));
        if (!isNaN(stateId)) {
            s.ajax({
                url: '@Url.Action("GetDistrict", "AjaxRequest")',
                data: { 'ID': stateId },
                method: 'get',
                dataType: 'json',
                success: function (data) {
                    debugger;
                    var items = [];
                    items.push("<option  value=0 >" + "-जिल्ला छान्नुहोस्-" + "</option>"); //first item
                    for (var i = 0; i < data.length; i++) {
                        items.push("<option value=" + data[i].Value + ">" + data[i].Text + "</option>");
                    }                                         //all data from the team table push into array
                    s("#PanjiDistrict").html(items.join(' '));

                },
                error: function (err) {
                    alert(err);
                }

            })
        }

    });
        s("#PanjiDistrict").change(function () {
            var districtId = parseInt(s("#PanjiDistrict").val());
            var palikaId = s("#PanjiPalika");
        palikaId.empty(); // this line is for clear all items from State dropdown
        palikaId.append($("<option></option>").val("").html("-Please Select-"));
        if (!isNaN(districtId)) {
            s.ajax({
                url: '@Url.Action("GetPalika", "AjaxRequest")',
                data: { 'ID': districtId },
                method: 'get',
                dataType: 'json',
                success: function (data) {

                    var items = [];
                    items.push("<option  value=0 >" + "-पालिका छान्नुहोस्-" + "</option>"); //first item
                    for (var i = 0; i < data.length; i++) {
                        items.push("<option value=" + data[i].Value + ">" + data[i].Text + "</option>");
                    }                                         //all data from the team table push into array
                    s("#PanjiPalika").html(items.join(' '));

                },
                error: function (err) {
                    alert(err);
                }

            })
        }
        });

        //shishu janmeko

            s("#JanmaPradesh").change(function () {
                debugger;
                var stateId = parseInt(s("#JanmaPradesh").val());
                var districtId = s("#JanmaJilla");
                districtId.empty(); // this line is for clear all items from State dropdown
                districtId.append($("<option></option>").val("").html("-Please Select-"));
                if (!isNaN(stateId)) {
                    s.ajax({
                        url: '@Url.Action("GetDistrict", "AjaxRequest")',
                        data: { 'ID': stateId },
                        method: 'get',
                        dataType: 'json',
                        success: function (data) {
                            debugger;
                            var items = [];
                            items.push("<option  value=0 >" + "-जिल्ला छान्नुहोस्-" + "</option>"); //first item
                            for (var i = 0; i < data.length; i++) {
                                items.push("<option value=" + data[i].Value + ">" + data[i].Text + "</option>");
                            }                                         //all data from the team table push into array
                            s("#JanmaJilla").html(items.join(' '));

                        },
                        error: function (err) {
                            alert(err);
                        }

                    })
                }

            });
        s("#JanmaJilla").change(function () {
            var districtId = parseInt(s("#JanmaJilla").val());
            var palikaId = s("#JanmaPalika");
            palikaId.empty(); // this line is for clear all items from State dropdown
            palikaId.append($("<option></option>").val("").html("-Please Select-"));
            if (!isNaN(districtId)) {
                s.ajax({
                    url: '@Url.Action("GetPalika", "AjaxRequest")',
                    data: { 'ID': districtId },
                    method: 'get',
                    dataType: 'json',
                    success: function (data) {

                        var items = [];
                        items.push("<option  value=0 >" + "-पालिका छान्नुहोस्-" + "</option>"); //first item
                        for (var i = 0; i < data.length; i++) {
                            items.push("<option value=" + data[i].Value + ">" + data[i].Text + "</option>");
                        }                                         //all data from the team table push into array
                        s("#JanmaPalika").html(items.join(' '));

                    },
                    error: function (err) {
                        alert(err);
                    }

                })
            }
        });
            //babuko

                s("#FatherPermaState").change(function () {
                    debugger;
                    var stateId = parseInt(s("#FatherPermaState").val());
                    var districtId = s("#FatherPermaDistrict");
                    districtId.empty(); // this line is for clear all items from State dropdown
                    districtId.append($("<option></option>").val("").html("-Please Select-"));
                    if (!isNaN(stateId)) {
                        s.ajax({
                            url: '@Url.Action("GetDistrict", "AjaxRequest")',
                            data: { 'ID': stateId },
                            method: 'get',
                            dataType: 'json',
                            success: function (data) {
                                debugger;
                                var items = [];
                                items.push("<option  value=0 >" + "-जिल्ला छान्नुहोस्-" + "</option>"); //first item
                                for (var i = 0; i < data.length; i++) {
                                    items.push("<option value=" + data[i].Value + ">" + data[i].Text + "</option>");
                                }                                         //all data from the team table push into array
                                s("#FatherPermaDistrict").html(items.join(' '));

                            },
                            error: function (err) {
                                alert(err);
                            }

                        })
                    }

                });
                s("#FatherPermaDistrict").change(function () {
                    var districtId = parseInt(s("#FatherPermaDistrict").val());
                    var palikaId = s("#FatherPermaPalika");
                    palikaId.empty(); // this line is for clear all items from State dropdown
                    palikaId.append($("<option></option>").val("").html("-Please Select-"));
                    if (!isNaN(districtId)) {
                        s.ajax({
                            url: '@Url.Action("GetPalika", "AjaxRequest")',
                            data: { 'ID': districtId },
                            method: 'get',
                            dataType: 'json',
                            success: function (data) {

                                var items = [];
                                items.push("<option  value=0 >" + "-पालिका छान्नुहोस्-" + "</option>"); //first item
                                for (var i = 0; i < data.length; i++) {
                                    items.push("<option value=" + data[i].Value + ">" + data[i].Text + "</option>");
                                }                                         //all data from the team table push into array
                                s("#FatherPermaPalika").html(items.join(' '));

                            },
                            error: function (err) {
                                alert(err);
                            }

                        })
                    }
                });
                //aamako

                    s("#MotherPermaState").change(function () {
                        debugger;
                        var stateId = parseInt(s("#MotherPermaState").val());
                        var districtId = s("#MotherPermaDistrict");
                        districtId.empty(); // this line is for clear all items from State dropdown
                        districtId.append($("<option></option>").val("").html("-Please Select-"));
                        if (!isNaN(stateId)) {
                            s.ajax({
                                url: '@Url.Action("GetDistrict", "AjaxRequest")',
                                data: { 'ID': stateId },
                                method: 'get',
                                dataType: 'json',
                                success: function (data) {
                                    debugger;
                                    var items = [];
                                    items.push("<option  value=0 >" + "-जिल्ला छान्नुहोस्-" + "</option>"); //first item
                                    for (var i = 0; i < data.length; i++) {
                                        items.push("<option value=" + data[i].Value + ">" + data[i].Text + "</option>");
                                    }                                         //all data from the team table push into array
                                    s("#MotherPermaDistrict").html(items.join(' '));

                                },
                                error: function (err) {
                                    alert(err);
                                }

                            })
                        }

                    });
                    s("#MotherPermaDistrict").change(function () {
                        var districtId = parseInt(s("#MotherPermaDistrict").val());
                        var palikaId = s("#MotherPermaPalika");
                        palikaId.empty(); // this line is for clear all items from State dropdown
                        palikaId.append($("<option></option>").val("").html("-Please Select-"));
                        if (!isNaN(districtId)) {
                            s.ajax({
                                url: '@Url.Action("GetPalika", "AjaxRequest")',
                                data: { 'ID': districtId },
                                method: 'get',
                                dataType: 'json',
                                success: function (data) {

                                    var items = [];
                                    items.push("<option  value=0 >" + "-पालिका छान्नुहोस्-" + "</option>"); //first item
                                    for (var i = 0; i < data.length; i++) {
                                        items.push("<option value=" + data[i].Value + ">" + data[i].Text + "</option>");
                                    }                                         //all data from the team table push into array
                                    s("#MotherPermaPalika").html(items.join(' '));

                                },
                                error: function (err) {
                                    alert(err);
                                }

                            })
                        }
                    });
                    //suchakko

                        s("#InfState").change(function () {
                            debugger;
                            var stateId = parseInt(s("#InfState").val());
                            var districtId = s("#InfDistrict");
                            districtId.empty(); // this line is for clear all items from State dropdown
                            districtId.append($("<option></option>").val("").html("-Please Select-"));
                            if (!isNaN(stateId)) {
                                s.ajax({
                                    url: '@Url.Action("GetDistrict", "AjaxRequest")',
                                    data: { 'ID': stateId },
                                    method: 'get',
                                    dataType: 'json',
                                    success: function (data) {
                                        debugger;
                                        var items = [];
                                        items.push("<option  value=0 >" + "-जिल्ला छान्नुहोस्-" + "</option>"); //first item
                                        for (var i = 0; i < data.length; i++) {
                                            items.push("<option value=" + data[i].Value + ">" + data[i].Text + "</option>");
                                        }                                         //all data from the team table push into array
                                        s("#InfDistrict").html(items.join(' '));

                                    },
                                    error: function (err) {
                                        alert(err);
                                    }

                                })
                            }

                        });
                        s("#InfDistrict").change(function () {
                            var districtId = parseInt(s("#InfDistrict").val());
                            var palikaId = s("#InfPalika");
                            palikaId.empty(); // this line is for clear all items from State dropdown
                            palikaId.append($("<option></option>").val("").html("-Please Select-"));
                            if (!isNaN(districtId)) {
                                s.ajax({
                                    url: '@Url.Action("GetPalika", "AjaxRequest")',
                                    data: { 'ID': districtId },
                                    method: 'get',
                                    dataType: 'json',
                                    success: function (data) {

                                        var items = [];
                                        items.push("<option  value=0 >" + "-पालिका छान्नुहोस्-" + "</option>"); //first item
                                        for (var i = 0; i < data.length; i++) {
                                            items.push("<option value=" + data[i].Value + ">" + data[i].Text + "</option>");
                                        }                                         //all data from the team table push into array
                                        s("#InfPalika").html(items.join(' '));

                                    },
                                    error: function (err) {
                                        alert(err);
                                    }

                                })
                            }
                        });
    });
</script>
<fieldset>
    <legend>जन्म दर्ता</legend>

    @Html.HiddenFor(model => model.PanjiId)
    @Html.HiddenFor(model => model.NewbornId)
    @Html.HiddenFor(model => model.NewbornFatherId)
    @Html.HiddenFor(model => model.NewBornMotherId)
    @Html.HiddenFor(model => model.NewBornInformantId)
    <div class="well well-small">
        <h6>(स्थानीय पन्जिकाधिकारीले भर्ने)</h6>
        <table style="width:100%">
            <tr style="text-align:left;">
                <td>
                    <table>
                        <tr>
                            <th>@Html.LabelFor(model => model.PanjiState)</th>
                            <td>@Html.DropDownListFor(model => model.PanjiState, @SifarishView.Utility.GetAllState(), "छान्नुहोस्")</td>
                        </tr>
                        <tr>
                            <th>@Html.LabelFor(model => model.PanjiDistrict)</th>
                            <td>@Html.DropDownListFor(model => model.PanjiDistrict, @SifarishView.Utility.GetAllDistrict(), "छान्नुहोस्")</td>
                        </tr>
                        <tr>
                            <th>@Html.LabelFor(model => model.PanjiPalika)</th>
                            <td>@Html.DropDownListFor(model => model.PanjiPalika, @SifarishView.Utility.GetAllPalika(), "छान्नुहोस्")</td>
                        </tr>
                        <tr>
                            <th>@Html.LabelFor(model => model.PanjiWardNo)</th>
                            <td>@Html.TextBoxFor(model => model.PanjiWardNo, new { @class = "input-mini", @type = "number" })</td>
                        </tr>
                    </table>
                </td>
                <td>
                    <table class="pull-right">
                        <tr>
                            <th>स्थानीय पन्जिकाधिकारीको नाम</th>
                            <td>@Html.TextBoxFor(model => model.PanjiName, new { @class = "langtranslate" })</td>
                        </tr>
                        <tr>
                            <th>स्थानीय पन्जिकाधिकारीको नाम(In English)</th>
                            <td>@Html.TextBoxFor(model => model.PanjiName_Eng, new { @class = "form-control nep" })</td>
                        </tr>
                        <tr>
                            <th>@Html.LabelFor(model => model.Panji_INVId)</th>
                            <td>@Html.TextBoxFor(model => model.Panji_INVId, new { @class = "form-control nep" })</td>
                        </tr>
                        <tr>
                            <th>@Html.LabelFor(model => model.JanmaFaramDartaNo)</th>
                            <td>@Html.TextBoxFor(model => model.JanmaFaramDartaNo, new { @class = "form-control nep", @readonly = "readonly" })</td>
                        </tr>
                        <tr>
                            <th>@Html.LabelFor(model => model.FaramDartaMiti)</th>
                            <td>@Html.TextBoxFor(model => model.FaramDartaMiti, new { @class = "nepali-calendar", @placeholder = "मिति हाल्नुहोस" })</td>
                        </tr>
                        <tr>
                            <th>परिवार लगत फाराम नं</th>
                            <td>@Html.TextBoxFor(model => model.PariwarLagatFaramNo, new { @class = "form-control nep" })</td>
                        </tr>
                    </table>
                </td>
            </tr>
        </table>
    </div>

    <div class="row">
        <p>
            (सूचकले भर्ने )
            श्री स्थानीय पन्जिकाधिकारीज्यू,
            स्थानीय पन्जिकाधिकारीको कार्यालय,
            वडा नं......,.................... महा/उप/नगरपालिका वा गाउँपालिका,
            ..................जिल्ला,................ प्रदेश
            महोदय,
            निम्न लिखित विवरण खुलाई नवजात शिशु जन्मको सूचना दिन आएको छु| कानून अनुसार जन्म दर्ता गरि पाउँ |
        </p>
        <h5>१. नवजात शिशुको विवरण</h5>
        <div class="row">
            <div class="span11">
                <div class="span3">
                    @Html.LabelFor(model => model.NewbornNaam)
                </div>
                <div class="span7">
                    @Html.TextBoxFor(model => model.NewbornNaam)
                    @Html.ValidationMessageFor(model => model.NewbornNaam)

                </div>
            </div>
            <div class="span11">
                <div class="span3">
                    @Html.LabelFor(model => model.NewbornName)
                </div>
                <div class="span7">
                    @Html.TextBoxFor(model => model.NewbornName)
                    @Html.ValidationMessageFor(model => model.NewbornName)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="span11">
                <div class="span3">
                    @Html.LabelFor(model => model.JanmaMiti)
                </div>
                <div class="span7">
                    @Html.TextBoxFor(model => model.JanmaMiti, new { @class = "nepali-calendar", @placeholder = "मिति हाल्नुहोस" })
                    @Html.ValidationMessageFor(model => model.JanmaMiti)
                </div>
            </div>
            <div class="span11">
                <div class="span3">
                    @Html.LabelFor(model => model.Gender)
                </div>
                <div class="span7">
                    @Html.DropDownListFor(model => model.Gender, @SifarishView.Utility.GetGender(), "छानुहोस")
                    @Html.ValidationMessageFor(model => model.Gender)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="span11">
                <div class="span3">
                    @Html.LabelFor(model => model.JanmaSthaan)
                </div>
                <div class="span7">
                    @Html.DropDownListFor(model => model.JanmaSthaan, @SifarishView.Utility.GetJanmasthaan(), "छानुहोस")
                    @Html.ValidationMessageFor(model => model.JanmaSthaan)
                </div>
            </div>
            <div class="span11">
                <div class="span3">
                    @Html.LabelFor(model => model.JanmadaMadatt)
                </div>
                <div class="span7">
                    @Html.DropDownListFor(model => model.JanmadaMadatt, @SifarishView.Utility.GetJanmaMaddat(), "छानुहोस")
                    @Html.ValidationMessageFor(model => model.JanmadaMadatt)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="span11">
                <div class="span3">
                    @Html.LabelFor(model => model.JanmaJaatJati)
                </div>
                <div class="span7">
                    @Html.TextBoxFor(model => model.JanmaJaatJati)
                    @Html.ValidationMessageFor(model => model.JanmaJaatJati)
                </div>
            </div>
            <div class="span11">
                <div class="span3">
                    @Html.LabelFor(model => model.JanmaKisim)
                </div>
                <div class="span7">
                    @Html.DropDownListFor(model => model.JanmaKisim, @SifarishView.Utility.GetJanmaKisim(), "छानुहोस")
                    @Html.ValidationMessageFor(model => model.JanmaKisim)

                </div>
            </div>
        </div>
        <h5>शिशु जन्मेको ठेगाना</h5>
        <div class="row">
            <div class="span11">
                <div class="span3">
                    @Html.LabelFor(model => model.JanmaPradesh)
                </div>
                <div class="span7">
                    @Html.DropDownListFor(model => model.JanmaPradesh, @SifarishView.Utility.GetAllState(), "छान्नुहोस्")
                </div>
            </div>
            <div class="span11">
                <div class="span3">
                    @Html.LabelFor(model => model.JanmaJilla)
                </div>
                <div class="span7">
                    @Html.DropDownListFor(model => model.JanmaJilla, @SifarishView.Utility.GetAllDistrict(), "छान्नुहोस्")
                </div>
            </div>
        </div>
        <div class="row">
            <div class="span11">
                <div class="span3">
                    @Html.LabelFor(model => model.JanmaPalika)
                </div>
                <div class="span7">
                    @Html.DropDownListFor(model => model.JanmaPalika, @SifarishView.Utility.GetAllPalika(), "छान्नुहोस्")
                </div>
            </div>
            <div class="span11">
                <div class="span3">
                    @Html.LabelFor(model => model.JanmaWardNo)
                </div>
                <div class="span7">
                    @Html.TextBoxFor(model => model.JanmaWardNo, new { @class = "input-mini", @type = "number" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="span24">
                <div class="span3">
                    <label>विदेशमा जन्मेको भएमा ठेगाना</label>
                </div>
                <div class="span7">
                    @Html.TextBoxFor(model => model.JanmaBidesh)
                    @Html.ValidationMessageFor(model => model.JanmaBidesh)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="span24">
                <div class="span3">
                    <label>विदेशमा जन्मेको भएमा ठेगाना(In English)</label>
                </div>
                <div class="span7">
                    @Html.TextBoxFor(model => model.JanmaForeign)
                    @Html.ValidationMessageFor(model => model.JanmaForeign)
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <h5>२. नवजात शिशुको बाजेको विवरण</h5>
        <div class="row">
            <div class="span24">
                <div class="span3">
                    <label>नवजात शिशुको बाजेको नाम</label>
                </div>
                <div class="span7">
                    @Html.TextBoxFor(model => model.BajekoNaam)
                    @Html.ValidationMessageFor(model => model.BajekoNaam)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="span24">
                <div class="span3">
                    <label>बाजेको पुरा नाम थर(In English)</label>
                </div>
                <div class="span7">
                    @Html.TextBoxFor(model => model.GrandFather)
                    @Html.ValidationMessageFor(model => model.GrandFather)
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <h5>३. नवजात शिशुको बाबु आमाको विवरण</h5>
        <table class="table table-bordered table-striped">

            <thead>
                <tr>
                    <th></th>
                    <th>बाबुको विवरण</th>
                    <th>आमाको विवरण</th>
                </tr>
            </thead>

            <tbody>
                <tr>
                    <td>पूरा नाम थर</td>
                    <td>@Html.TextBoxFor(model => model.FatherNaamThar)</td>
                    <td>@Html.TextBoxFor(model => model.MotherNaamThar)</td>
                </tr>
                <tr>
                    <td>पूरा नाम थर(In English)</td>
                    <td>@Html.TextBoxFor(model => model.FatherFullName)</td>
                    <td>@Html.TextBoxFor(model => model.MotherFullName)</td>
                </tr>
                <tr>
                    <th>स्थायी ठेगाना</th>
                    <td></td>
                    <td></td>
                </tr>
                <tr>
                    <td>प्रदेश</td>
                    <td>@Html.DropDownListFor(model => model.FatherPermaState, @SifarishView.Utility.GetAllState(), "छान्नुहोस्")</td>
                    <td>@Html.DropDownListFor(model => model.MotherPermaState, @SifarishView.Utility.GetAllState(), "छान्नुहोस्")</td>
                </tr>
                <tr>
                    <td>जिल्ला</td>
                    <td>@Html.DropDownListFor(model => model.FatherPermaDistrict, @SifarishView.Utility.GetAllDistrict(), "छान्नुहोस्")</td>
                    <td>@Html.DropDownListFor(model => model.MotherPermaDistrict, @SifarishView.Utility.GetAllDistrict(), "छान्नुहोस्")</td>
                </tr>
                <tr>
                    <td>गा.पा./न.पा.</td>
                    <td>@Html.DropDownListFor(model => model.FatherPermaPalika, @SifarishView.Utility.GetAllPalika(), "छान्नुहोस्")</td>
                    <td>@Html.DropDownListFor(model => model.MotherPermaPalika, @SifarishView.Utility.GetAllPalika(), "छान्नुहोस्")</td>
                </tr>
                <tr>
                    <td>वडा नं.</td>
                    <td>@Html.TextBoxFor(model => model.FatherPermaWardNo)</td>
                    <td>@Html.TextBoxFor(model => model.MotherPermaWardNo)</td>
                </tr>
                <tr>
                    <td>गाउँ/टोल</td>
                    <td>@Html.TextBoxFor(model => model.FatherGaunTole)</td>
                    <td>@Html.TextBoxFor(model => model.MotherGaunTole)</td>
                </tr>
                <tr>
                    <td>घर नं.</td>
                    <td>@Html.TextBoxFor(model => model.FatherGharNo)</td>
                    <td>@Html.TextBoxFor(model => model.MotherGharNo)</td>
                </tr>
                <tr>
                    <td>शिशु जन्मदाको उमेर</td>
                    <td>@Html.TextBoxFor(model => model.FatherSisuJanmidakoUmer)</td>
                    <td>@Html.TextBoxFor(model => model.MotherSisuJanmidakoUmer)</td>
                </tr>
                <tr>
                    <td>जन्म भएको देश</td>
                    <td>@Html.TextBoxFor(model => model.FatherJanmaDesh)</td>
                    <td>@Html.TextBoxFor(model => model.MotherJanmaDesh)</td>
                </tr>
                <tr>
                    <td>नागरिकता लिएको देश</td>
                    <td>@Html.TextBoxFor(model => model.FatherNagariktaLiyekoDesh)</td>
                    <td>@Html.TextBoxFor(model => model.MotherNagariktaLiyekoDesh)</td>
                </tr>
                <tr>
                    <td>नागरिकता प्रमाणपत्र नं.</td>
                    <td>@Html.TextBoxFor(model => model.FatherNagariktaPraPaNo)</td>
                    <td>@Html.TextBoxFor(model => model.MotherNagariktaPraPaNo)</td>
                </tr>
                <tr>
                    <td>प्रमाणपत्र जारी मिति</td>
                    <td>@Html.TextBoxFor(model => model.FatherNagariktaIssueDate, new { @class = "nepali-calendar", @placeholder = "मिति हाल्नुहोस" })</td>
                    <td>@Html.TextBoxFor(model => model.MotherNagariktaIssueDate, new { @class = "nepali-calendar", @placeholder = "मिति हाल्नुहोस" })</td>
                </tr>
                <tr>
                    <td>नागरिकता प्रमाणपत्र जारी जिल्ला</td>
                    <td>@Html.DropDownListFor(model => model.FatherNagariktaIsssueDistrict, @SifarishView.Utility.GetAllDistrict(), "छान्नुहोस्")</td>
                    <td>@Html.DropDownListFor(model => model.MotherNagariktaIssueDistrict, @SifarishView.Utility.GetAllDistrict(), "छान्नुहोस्")</td>
                </tr>
                <tr>
                    <td>विदेशी भएमा पासपोर्ट नं र देशको नाम</td>
                    <td>@Html.TextBoxFor(model => model.FatherPassportNo_Desh)</td>
                    <td>@Html.TextBoxFor(model => model.MotherPassportNo_Desh)</td>
                </tr>
                <tr>
                    <td>शिक्षाको स्थर(उतिर्ण तह)</td>
                    <td>@Html.DropDownListFor(model => model.FatherShikshaSthar, @SifarishView.Utility.GetEducation(), "छान्नुहोस्")</td>
                    <td>@Html.DropDownListFor(model => model.MotherShikshaSthar, @SifarishView.Utility.GetEducation(), "छान्नुहोस्")</td>
                </tr>
                <tr>
                    <td>पेशा</td>
                    <td>@Html.DropDownListFor(model => model.FatherPesha, @SifarishView.Utility.GetOccupation(), "छान्नुहोस्")</td>
                    <td>@Html.DropDownListFor(model => model.MotherPesha, @SifarishView.Utility.GetOccupation(), "छान्नुहोस्")</td>
                </tr>
                <tr>
                    <td>धर्म</td>
                    <td>@Html.TextBoxFor(model => model.FatherDharma)</td>
                    <td>@Html.TextBoxFor(model => model.MotherDharma)</td>
                </tr>
                <tr>
                    <td>मातृभाषा</td>
                    <td>@Html.TextBoxFor(model => model.FatherMatriBhasa)</td>
                    <td>@Html.TextBoxFor(model => model.MotherMatriBhasa)</td>
                </tr>
                <tr>
                    <td>यो शिशु समेत गरि हालसम्म जन्मेको सन्तान संख्या</td>
                    <td>@Html.TextBoxFor(model => model.TotalChild)</td>
                </tr>
                <tr>
                    <td>यो शिशु समेत गरि हालसम्म जीवित सन्तान संख्या</td>
                    <td>@Html.TextBoxFor(model => model.TotalLiveChild)</td>

                </tr>
                <tr>
                    <td>विवाह दर्ता नं.</td>
                    <td>@Html.TextBoxFor(model => model.VivahDartaNo)</td>

                </tr>
                <tr>
                    <td>विवाह भएको मिति</td>
                    <td>@Html.TextBoxFor(model => model.VivahMiti, new { @class = "nepali-calendar", @placeholder = "मिति हाल्नुहोस" })</td>
                </tr>
            </tbody>
        </table>
    </div>
</fieldset>
<fieldset>
    <div class="row">
        <h5>४. सूचकको विवरण</h5>
        <table class="table table-bordered table-striped table-condensed">
            <tbody style="text-align:left;">
                <tr>
                    <th>पूरा नाम थर</th>
                    <td>@Html.TextBoxFor(model => model.InfNaamThar)</td>
                </tr>
                <tr>
                    <th>पूरा नाम थर(In English)</th>
                    <td>@Html.TextBoxFor(model => model.InfFullName)</td>
                </tr>
                <tr>
                    <th>नवजात शिशुसंगको नाता</th>
                    <td>@Html.DropDownListFor(model => model.InfRelationToNewBorn, @SifarishView.Utility.GetRelation(), "छान्नुहोस्")</td>
                </tr>
                <tr>
                    <th>ठेगाना</th>
                </tr>
                <tr>
                    <th>प्रदेश</th>
                    <td>@Html.DropDownListFor(model => model.InfState, @SifarishView.Utility.GetAllState(), "छान्नुहोस्")</td>
                    <th>जिल्ला</th>
                    <td>@Html.DropDownListFor(model => model.InfDistrict, @SifarishView.Utility.GetAllDistrict(), "छान्नुहोस्")</td>
                    <th>गा.पा./न.पा.</th>
                    <td>@Html.DropDownListFor(model => model.InfPalika, @SifarishView.Utility.GetAllPalika(), "छान्नुहोस्")</td>
                </tr>
                <tr>
                    <th>वडा नं.</th>
                    <td>@Html.TextBoxFor(model => model.InfWardNo)</td>
                    <th>गाउँ टोल</th>
                    <td>@Html.TextBoxFor(model => model.InfGaunTole)</td>
                    <th>घर नं.</th>
                    <td>@Html.TextBoxFor(model => model.InfGharNo)</td>
                </tr>
                <tr>
                    <th>नागरिकता</th>
                </tr>
                <tr>
                    <th>नागरिकता प्रमाणपत्र नं.</th>
                    <td>@Html.TextBoxFor(model => model.InfNagariktaPraPaNo)</td>
                </tr>
                <tr>
                    <th>नागरिकता प्रमाणपत्र जारी गरेको मिति</th>
                    <td>@Html.TextBoxFor(model => model.InfNagariktaIssueDate, new { @class = "nepali-calendar" })</td>
                </tr>
                <tr>
                    <th>नागरिकता प्रमाणपत्र जारी जिल्ला</th>
                    <td>@Html.DropDownListFor(model => model.InfState, @SifarishView.Utility.GetAllDistrict(), "छान्नुहोस्")</td>
                </tr>

                <tr>
                    <th>विदेशी भएमा पासपोर्ट नं र देशको नाम</th>
                    <td>@Html.TextBoxFor(model => model.InfPassportNo_Desh)</td>
                </tr>
                <tr>
                    <th>फाराम भएको मिति</th>
                    <td>@Html.TextBoxFor(model => model.Miti, new { @class = "nepali-calendar", @placeholder = "मिति हाल्नुहोस" })</td>
                </tr>
            </tbody>
        </table>
    </div>
</fieldset>


