@model SifarishView.Areas.Darta.Models.BasaisaraiDartaViewModel
@using SifarishView.Converter

<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script src="~/Scripts/select2.full.min.js"></script>
<link href="~/Content/select2.css" rel="stylesheet" />
<script>
    var s = jQuery.noConflict();

    s(document).ready(function () {
        s('#MultiRecordList .select2').select2({
            placeholder: "छान्नुहोस्",
            allowClear: true
        });
        //panji
        s("#PanjiState").change(function () {
            debugger;
            var stateId = parseInt(s("#PanjiState").val());
            var districtId = s("#PanjiDistrict");
        districtId.empty(); // this line is for clear all items from State dropdown
        districtId.append($("<option></option>").val("").html("-Please Select-"));
        if (!isNaN(stateId)) {
            s.ajax({
                url: '@Url.Action("GetDistrict", "AjaxRequest")',
                data: { 'ID': stateId },
                method: 'get',
                dataType: 'json',
                success: function (data) {
                    debugger;
                    var items = [];
                    items.push("<option  value=0 >" + "-जिल्ला छान्नुहोस्-" + "</option>"); //first item
                    for (var i = 0; i < data.length; i++) {
                        items.push("<option value=" + data[i].Value + ">" + data[i].Text + "</option>");
                    }                                         //all data from the team table push into array
                    s("#PanjiDistrict").html(items.join(' '));

                },
                error: function (err) {
                    alert(err);
                }

            })
        }

    });
        s("#PanjiDistrict").change(function () {
            var districtId = parseInt(s("#PanjiDistrict").val());
            var palikaId = s("#PanjiPalika");
        palikaId.empty(); // this line is for clear all items from State dropdown
        palikaId.append($("<option></option>").val("").html("-Please Select-"));
        if (!isNaN(districtId)) {
            s.ajax({
                url: '@Url.Action("GetPalika", "AjaxRequest")',
                data: { 'ID': districtId },
                method: 'get',
                dataType: 'json',
                success: function (data) {

                    var items = [];
                    items.push("<option  value=0 >" + "-पालिका छान्नुहोस्-" + "</option>"); //first item
                    for (var i = 0; i < data.length; i++) {
                        items.push("<option value=" + data[i].Value + ">" + data[i].Text + "</option>");
                    }                                         //all data from the team table push into array
                    s("#PanjiPalika").html(items.join(' '));

                },
                error: function (err) {
                    alert(err);
                }

            })
        }
        });

            //sari jane thegana

        s("#BasaisaraiJanePradesh").change(function () {
                    debugger;
                    var stateId = parseInt(s("#BasaisaraiJanePradesh").val());
                    var districtId = s("#BasaisaraiJaneJilla");
                    districtId.empty(); // this line is for clear all items from State dropdown
                    districtId.append($("<option></option>").val("").html("-Please Select-"));
                    if (!isNaN(stateId)) {
                        s.ajax({
                            url: '@Url.Action("GetDistrict", "AjaxRequest")',
                            data: { 'ID': stateId },
                            method: 'get',
                            dataType: 'json',
                            success: function (data) {
                                debugger;
                                var items = [];
                                items.push("<option  value=0 >" + "-जिल्ला छान्नुहोस्-" + "</option>"); //first item
                                for (var i = 0; i < data.length; i++) {
                                    items.push("<option value=" + data[i].Value + ">" + data[i].Text + "</option>");
                                }                                         //all data from the team table push into array
                                s("#BasaisaraiJaneJilla").html(items.join(' '));

                            },
                            error: function (err) {
                                alert(err);
                            }

                        })
                    }

                });
        s("#BasaisaraiJaneJilla").change(function () {
            var districtId = parseInt(s("#BasaisaraiJaneJilla").val());
            var palikaId = s("#BasaisaraiJanePalika");
                    palikaId.empty(); // this line is for clear all items from State dropdown
                    palikaId.append($("<option></option>").val("").html("-Please Select-"));
                    if (!isNaN(districtId)) {
                        s.ajax({
                            url: '@Url.Action("GetPalika", "AjaxRequest")',
                            data: { 'ID': districtId },
                            method: 'get',
                            dataType: 'json',
                            success: function (data) {

                                var items = [];
                                items.push("<option  value=0 >" + "-पालिका छान्नुहोस्-" + "</option>"); //first item
                                for (var i = 0; i < data.length; i++) {
                                    items.push("<option value=" + data[i].Value + ">" + data[i].Text + "</option>");
                                }                                         //all data from the team table push into array
                                s("#BasaisaraiJanePalika").html(items.join(' '));

                            },
                            error: function (err) {
                                alert(err);
                            }

                        })
                    }
                });
                //sari aayeko thegana

        s("#BasaisaraiAayekoPradesh").change(function () {
                        debugger;
                        var stateId = parseInt(s("#BasaisaraiAayekoPradesh").val());
                        var districtId = s("#BasaisaraiAayekoJilla");
                        districtId.empty(); // this line is for clear all items from State dropdown
                        districtId.append($("<option></option>").val("").html("-Please Select-"));
                        if (!isNaN(stateId)) {
                            s.ajax({
                                url: '@Url.Action("GetDistrict", "AjaxRequest")',
                                data: { 'ID': stateId },
                                method: 'get',
                                dataType: 'json',
                                success: function (data) {
                                    debugger;
                                    var items = [];
                                    items.push("<option  value=0 >" + "-जिल्ला छान्नुहोस्-" + "</option>"); //first item
                                    for (var i = 0; i < data.length; i++) {
                                        items.push("<option value=" + data[i].Value + ">" + data[i].Text + "</option>");
                                    }                                         //all data from the team table push into array
                                    s("#BasaisaraiAayekoJilla").html(items.join(' '));

                                },
                                error: function (err) {
                                    alert(err);
                                }

                            })
                        }

                    });
        s("#BasaisaraiAayekoJilla").change(function () {
            var districtId = parseInt(s("#BasaisaraiAayekoJilla").val());
            var palikaId = s("#BasaisaraiAayekoPalika");
                        palikaId.empty(); // this line is for clear all items from State dropdown
                        palikaId.append($("<option></option>").val("").html("-Please Select-"));
                        if (!isNaN(districtId)) {
                            s.ajax({
                                url: '@Url.Action("GetPalika", "AjaxRequest")',
                                data: { 'ID': districtId },
                                method: 'get',
                                dataType: 'json',
                                success: function (data) {

                                    var items = [];
                                    items.push("<option  value=0 >" + "-पालिका छान्नुहोस्-" + "</option>"); //first item
                                    for (var i = 0; i < data.length; i++) {
                                        items.push("<option value=" + data[i].Value + ">" + data[i].Text + "</option>");
                                    }                                         //all data from the team table push into array
                                    s("#BasaisaraiAayekoPalika").html(items.join(' '));

                                },
                                error: function (err) {
                                    alert(err);
                                }

                            })
                        }
                    });
                    //suchakko

        s("#InfState").change(function () {
                            debugger;
                            var stateId = parseInt(s("#InfState").val());
                            var districtId = s("#InfDistrict");
                            districtId.empty(); // this line is for clear all items from State dropdown
                            districtId.append($("<option></option>").val("").html("-Please Select-"));
                            if (!isNaN(stateId)) {
                                s.ajax({
                                    url: '@Url.Action("GetDistrict", "AjaxRequest")',
                                    data: { 'ID': stateId },
                                    method: 'get',
                                    dataType: 'json',
                                    success: function (data) {
                                        debugger;
                                        var items = [];
                                        items.push("<option  value=0 >" + "-जिल्ला छान्नुहोस्-" + "</option>"); //first item
                                        for (var i = 0; i < data.length; i++) {
                                            items.push("<option value=" + data[i].Value + ">" + data[i].Text + "</option>");
                                        }                                         //all data from the team table push into array
                                        s("#InfDistrict").html(items.join(' '));

                                    },
                                    error: function (err) {
                                        alert(err);
                                    }

                                })
                            }

                        });
        s("#InfDistrict").change(function () {
            var districtId = parseInt(s("#InfDistrict").val());
            var palikaId = s("#InfPalika");
                            palikaId.empty(); // this line is for clear all items from State dropdown
                            palikaId.append($("<option></option>").val("").html("-Please Select-"));
                            if (!isNaN(districtId)) {
                                s.ajax({
                                    url: '@Url.Action("GetPalika", "AjaxRequest")',
                                    data: { 'ID': districtId },
                                    method: 'get',
                                    dataType: 'json',
                                    success: function (data) {

                                        var items = [];
                                        items.push("<option  value=0 >" + "-पालिका छान्नुहोस्-" + "</option>"); //first item
                                        for (var i = 0; i < data.length; i++) {
                                            items.push("<option value=" + data[i].Value + ">" + data[i].Text + "</option>");
                                        }                                         //all data from the team table push into array
                                        s("#InfPalika").html(items.join(' '));

                                    },
                                    error: function (err) {
                                        alert(err);
                                    }

                                })
                            }
        });

    });
</script>
<fieldset>
    <legend>बसाई सराई दर्ता</legend>

    @Html.HiddenFor(model => model.PanjiId)
    @Html.HiddenFor(model => model.NewMigrationId)
    @Html.HiddenFor(model => model.NewMigrationInformantId)
    <div class="well well-small">
        <h6>(स्थानीय पन्जिकाधिकारीले भर्ने)</h6>
        <table style="width:100%">
            <tr style="text-align:left;">
                <td>
                    <table>
                        <tr>
                            <th>@Html.LabelFor(model => model.PanjiState)</th>
                            <td>@Html.DropDownListFor(model => model.PanjiState, @SifarishView.Utility.GetAllState(), "छान्नुहोस्")</td>
                        </tr>
                        <tr>
                            <th>@Html.LabelFor(model => model.PanjiDistrict)</th>
                            <td>@Html.DropDownListFor(model => model.PanjiDistrict, @SifarishView.Utility.GetAllDistrict(), "छान्नुहोस्")</td>
                        </tr>
                        <tr>
                            <th>@Html.LabelFor(model => model.PanjiPalika)</th>
                            <td>@Html.DropDownListFor(model => model.PanjiPalika, @SifarishView.Utility.GetAllPalika(), "छान्नुहोस्")</td>
                        </tr>
                        <tr>
                            <th>@Html.LabelFor(model => model.PanjiWardNo)</th>
                            <td>@Html.TextBoxFor(model => model.PanjiWardNo, new { @class = "input-mini", @type = "number" })</td>
                        </tr>
                    </table>
                </td>
                <td>
                    <table class="pull-right">
                        <tr>
                            <th>स्थानीय पन्जिकाधिकारीको नाम</th>
                            <td>@Html.TextBoxFor(model => model.PanjiName, new { @class = "langtranslate" })</td>
                        </tr>
                        <tr>
                            <th>स्थानीय पन्जिकाधिकारीको नाम(In English)</th>
                            <td>@Html.TextBoxFor(model => model.PanjiName_Eng, new { @class = "form-control nep" })</td>
                        </tr>
                        <tr>
                            <th>@Html.LabelFor(model => model.Panji_INVId)</th>
                            <td>@Html.TextBoxFor(model => model.Panji_INVId, new { @class = "form-control nep" })</td>
                        </tr>
                        <tr>
                            <th>@Html.LabelFor(model => model.BasaisaraiFaramDartaNo)</th>
                            <td>@Html.TextBoxFor(model => model.BasaisaraiFaramDartaNo, new { @class = "form-control nep", @readonly = "readonly" })</td>
                        </tr>
                        <tr>
                            <th>@Html.LabelFor(model => model.FaramDartaMiti)</th>
                            <td>@Html.TextBoxFor(model => model.FaramDartaMiti, new { @class = "nepali-calendar", @placeholder = "मिति हाल्नुहोस" })</td>
                        </tr>
                        <tr>
                            <th>परिवार लगत फाराम नं</th>
                            <td>@Html.TextBoxFor(model => model.PariwarLagatFaramNo, new { @class = "form-control nep" })</td>
                        </tr>
                    </table>
                </td>
            </tr>
        </table>
    </div>

    <div class="row">
        <p>
            (सूचकले भर्ने )
            श्री स्थानीय पन्जिकाधिकारीज्यू,
            स्थानीय पन्जिकाधिकारीको कार्यालय,
            वडा नं......,.................... महा/उप/नगरपालिका वा गाउँपालिका,
            ..................जिल्ला,................ प्रदेश
            महोदय,
            निम्न लिखित विवरण खुलाई बसाई सराईको सूचना दिन आएको छु| कानून अनुसार जन्म दर्ता गरि पाउँ |
        </p>
        <h5>१. कहाँ सरी जाने ठेगाना </h5>
        <div class="row">
            <div class="span11">
                <div class="span3">
                    @Html.LabelFor(model => model.BasaisaraiJanePradesh)
                </div>
                <div class="span7">
                    @Html.DropDownListFor(model => model.BasaisaraiJanePradesh, @SifarishView.Utility.GetAllState(), "छानुहोस")
                    @Html.ValidationMessageFor(model => model.BasaisaraiJanePradesh)
                </div>
            </div>
            <div class="span11">
                <div class="span3">
                    @Html.LabelFor(model => model.BasaisaraiJaneJilla)
                </div>
                <div class="span7">
                    @Html.DropDownListFor(model => model.BasaisaraiJaneJilla, @SifarishView.Utility.GetAllDistrict(), "छानुहोस")
                    @Html.ValidationMessageFor(model => model.BasaisaraiJaneJilla)
                </div>
            </div>

        </div>
        <div class="row">
            <div class="span11">
                <div class="span3">
                    @Html.LabelFor(model => model.BasaisaraiJanePalika)
                </div>
                <div class="span7">
                    @Html.DropDownListFor(model => model.BasaisaraiJanePalika, @SifarishView.Utility.GetAllPalika(), "छानुहोस")
                    @Html.ValidationMessageFor(model => model.BasaisaraiJanePalika)
                </div>
            </div>
            <div class="span11">
                <div class="span3">
                    @Html.LabelFor(model => model.BasaisaraiJaneWardNo)
                </div>
                <div class="span7">
                    @Html.TextBoxFor(model => model.BasaisaraiJaneWardNo, new { @class = "input-mini", @type = "number" })
                    @Html.ValidationMessageFor(model => model.BasaisaraiJaneWardNo)
                </div>
            </div>
        </div>
        <div class="row">

            <div class="span11">
                <div class="span3">
                    @Html.LabelFor(model => model.BasaisaraiJaneGharNo)
                </div>
                <div class="span7">
                    @Html.TextBoxFor(model => model.BasaisaraiJaneGharNo)
                    @Html.ValidationMessageFor(model => model.BasaisaraiJaneGharNo)
                </div>
            </div>
            <div class="span11">
                <div class="span3">
                    @Html.LabelFor(model => model.BasaisaraiJaneGaunTole)
                </div>
                <div class="span7">
                    @Html.TextBoxFor(model => model.BasaisaraiJaneGaunTole)
                    @Html.ValidationMessageFor(model => model.BasaisaraiJaneGaunTole)
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <h5>२. कहाँबाट सरी आएको ठेगाना</h5>
        <div class="row">
            <div class="span11">
                <div class="span3">
                    @Html.LabelFor(model => model.BasaisaraiAayekoDartaNo)
                </div>
                <div class="span7">
                    @Html.TextBoxFor(model => model.BasaisaraiAayekoDartaNo)
                    @Html.ValidationMessageFor(model => model.BasaisaraiAayekoDartaNo)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="span11">
                <div class="span3">
                    @Html.LabelFor(model => model.BasaisaraiAayekoPradesh)
                </div>
                <div class="span7">
                    @Html.DropDownListFor(model => model.BasaisaraiAayekoPradesh, @SifarishView.Utility.GetAllState(), "छानुहोस")
                    @Html.ValidationMessageFor(model => model.BasaisaraiAayekoPradesh)
                </div>
            </div>
            <div class="span11">
                <div class="span3">
                    @Html.LabelFor(model => model.BasaisaraiAayekoJilla)
                </div>
                <div class="span7">
                    @Html.DropDownListFor(model => model.BasaisaraiAayekoJilla, @SifarishView.Utility.GetAllDistrict(), "छानुहोस")
                    @Html.ValidationMessageFor(model => model.BasaisaraiAayekoJilla)
                </div>
            </div>

        </div>
        <div class="row">
            <div class="span11">
                <div class="span3">
                    @Html.LabelFor(model => model.BasaisaraiAayekoPalika)
                </div>
                <div class="span7">
                    @Html.DropDownListFor(model => model.BasaisaraiAayekoPalika, @SifarishView.Utility.GetAllPalika(), "छानुहोस")
                    @Html.ValidationMessageFor(model => model.BasaisaraiAayekoPalika)
                </div>
            </div>
            <div class="span11">
                <div class="span3">
                    @Html.LabelFor(model => model.BasaisaraiAayekoWardNo)
                </div>
                <div class="span7">
                    @Html.TextBoxFor(model => model.BasaisaraiAayekoWardNo, new { @class = "input-mini", @type = "number" })
                    @Html.ValidationMessageFor(model => model.BasaisaraiAayekoWardNo)
                </div>
            </div>
        </div>
        <div class="row">

            <div class="span11">
                <div class="span3">
                    @Html.LabelFor(model => model.BasaisaraiAayekoGharNo)
                </div>
                <div class="span7">
                    @Html.TextBoxFor(model => model.BasaisaraiAayekoGharNo)
                    @Html.ValidationMessageFor(model => model.BasaisaraiAayekoGharNo)
                </div>
            </div>
            <div class="span11">
                <div class="span3">
                    @Html.LabelFor(model => model.BasaisaraiAayekoGaunTole)
                </div>
                <div class="span7">
                    @Html.TextBoxFor(model => model.BasaisaraiAayekoGaunTole)
                    @Html.ValidationMessageFor(model => model.BasaisaraiAayekoGaunTole)
                </div>
            </div>
        </div>
        <div class="row">

            <div class="span11">
                <div class="span3">
                    @Html.Label("बसाई सराई गर्ने घरमुलीको नाम थर")
                </div>
                <div class="span7">
                    @Html.TextBoxFor(model => model.GharMuliNaamThar)
                    @Html.ValidationMessageFor(model => model.GharMuliNaamThar)
                </div>
            </div>
        </div>
        <div class="row">

            <div class="span11">
                <div class="span3">
                    @Html.Label("बसाई सराई गर्ने घरमुलीको नाम थर(In English)")
                </div>
                <div class="span7">
                    @Html.TextBoxFor(model => model.GharMuliFullName)
                    @Html.ValidationMessageFor(model => model.GharMuliFullName)
                </div>
            </div>
        </div>
        <div class="row">

            <div class="span11">
                <div class="span3">
                    @Html.Label("बसाई सराईको मिति")
                </div>
                <div class="span7">
                    @Html.TextBoxFor(model => model.BasaisaraiAayekoMiti, new { @class = "nepali-calendar", @placeholder = "मिति हाल्नुहोस" })
                    @Html.ValidationMessageFor(model => model.BasaisaraiAayekoMiti)
                </div>
            </div>

        </div>
        <div class="row">

            <div class="span11">
                <div class="span3">
                    @Html.Label("बसाई सराईको कारण")
                </div>
                <div class="span7">
                    @Html.DropDownListFor(model => model.BasaisaraiAayekoKaran, @SifarishView.Utility.GetBasaisaraiKaran(), "छान्नुहोस्")
                    @Html.ValidationMessageFor(model => model.BasaisaraiAayekoKaran)
                </div>
            </div>
        </div>

    </div>
    <div id="personaldetails" class="well well-small">
        <h4>३. बसाई सराईगरी जाने व्यक्तिको विवरण</h4>
        <table id="multirecodtable" class="table table-bordered table-responsive table-hover">
            <thead>
                <tr style="font-size: medium">
                    <td class="span1" rowspan="2">क्र.सं.</td>
                    <td class="span2 pagination-centered" rowspan="2">जन्म दर्ता नं.</td>
                    <td class="span4 pagination-centered" rowspan="2">पुरा नाम थर</td>
                    <td class="span4 pagination-centered" rowspan="2">पुरा नाम थर(In English)</td>
                    <td class="span4 pagination-centered" rowspan="2">जन्म मिति</td>
                    <td class="span3 pagination-centered" rowspan="2">लिङ्ग</td>
                    <td class="span3 pagination-centered" colspan="4">जन्म स्थान</td>
                    <td class="span3 pagination-centered" colspan="3">नागरिकता प्रमाणपत्र</td>
                    <td class="span3 pagination-centered" rowspan="2">अन्य घटना दर्ता भए नभएको खुलाउने</td>
                    <td class="span3 pagination-centered" rowspan="2">सूचक संगको नाता</td>
                </tr>
                <tr>
                    <td>प्रदेश</td>
                    <td>जिल्ला</td>
                    <td>गा.पा./न.पा.</td>
                    <td>वडा नं.</td>
                    <td>नं.</td>
                    <td>जारी मिति</td>
                    <td>जिल्ला</td>
                </tr>
            </thead>
            <tbody id="MultiRecordList">
                @if (Model.BasaisaraiPersonalDetailsViewModelList != null && Model.BasaisaraiPersonalDetailsViewModelList.Count > 0)
                {
                    foreach (var item in Model.BasaisaraiPersonalDetailsViewModelList)
                    {
                        @Html.Partial("AddPersonalDetails", item)
                    }
                }
                else
                {
                    @Html.Partial("AddPersonalDetails", new SifarishView.Areas.Darta.Models.BasaisaraiPersonalDetailsViewModel())
                }
            </tbody>
        </table>
    </div>
</fieldset>
<fieldset>
    <div class="row">
        <h5>४. सूचकको विवरण</h5>
        <table class="table table-bordered table-striped table-condensed">
            <tbody style="text-align:left;">
                <tr>
                    <th>पूरा नाम थर</th>
                    <td>@Html.TextBoxFor(model => model.InfNaamThar)</td>
                </tr>
                <tr>
                    <th>पूरा नाम थर(In English)</th>
                    <td>@Html.TextBoxFor(model => model.InfFullName)</td>
                </tr>
                <tr>
                    <th>ठेगाना</th>
                </tr>
                <tr>
                    <th>प्रदेश</th>
                    <td>@Html.DropDownListFor(model => model.InfState, @SifarishView.Utility.GetAllState(), "छान्नुहोस्")</td>
                    <th>जिल्ला</th>
                    <td>@Html.DropDownListFor(model => model.InfDistrict, @SifarishView.Utility.GetAllDistrict(), "छान्नुहोस्")</td>
                    <th>गा.पा./न.पा.</th>
                    <td>@Html.DropDownListFor(model => model.InfPalika, @SifarishView.Utility.GetAllPalika(), "छान्नुहोस्")</td>
                </tr>
                <tr>
                    <th>वडा नं.</th>
                    <td>@Html.TextBoxFor(model => model.InfWardNo, new { @class = "input-mini", @type = "number" })</td>
                    <th>गाउँ टोल</th>
                    <td>@Html.TextBoxFor(model => model.InfGaunTole)</td>
                    <th>घर नं.</th>
                    <td>@Html.TextBoxFor(model => model.InfGharNo)</td>
                </tr>
                <tr>
                    <th>नागरिकता</th>
                </tr>
                <tr>
                    <th>नागरिकता प्रमाणपत्र नं.</th>
                    <td>@Html.TextBoxFor(model => model.InfNagariktaPraPaNo)</td>
                </tr>
                <tr>
                    <th>नागरिकता प्रमाणपत्र जारी गरेको मिति</th>
                    <td>@Html.TextBoxFor(model => model.InfNagariktaIssueDate, new { @class = "nepali-calendar" })</td>
                </tr>
                <tr>
                    <th>नागरिकता प्रमाणपत्र जारी जिल्ला</th>
                    <td>@Html.DropDownListFor(model => model.InfNagariktaIssueDistrict, @SifarishView.Utility.GetAllDistrict(), "छान्नुहोस्")</td>
                </tr>

                <tr>
                    <th>विदेशी भएमा पासपोर्ट नं र देशको नाम</th>
                    <td>@Html.TextBoxFor(model => model.InfPassportNo_Desh)</td>
                </tr>
                <tr>
                    <th>फाराम भएको मिति</th>
                    <td>@Html.TextBoxFor(model => model.Miti, new { @class = "nepali-calendar", @placeholder = "मिति हाल्नुहोस" })</td>
                </tr>
            </tbody>
        </table>
    </div>
</fieldset>

<script>
    $('#MultiRecordList').on('click', '.Add', AddRow)
    function AddRow() {
        $.ajax({
            url: '@Url.Content("~/BasaisaraiDarta/AddMultiRecord")',
            success: function (result) {
                if (result) {
                    $('#MultiRecordList').append(result)
                    $('#multirecodtable').show();
                    SnoCounter();
                    s('#MultiRecordList .select2').select2({
                        placeholder: "छान्नुहोस्",
                        allowClear: true
                    });
                }
            },
            error: function () {
                alert('error in calling ajax !!')
            }
        });
    }
    $('#MultiRecordList').on('click', '.remove', function () {
        $(this).closest('tr').remove()
        TableHeadderHide()
    })
    function SnoCounter() {

        var counter = 1;
        $('#MultiRecordList').find('tr').each(function (index, item) {

            $(item).find('.sno').html(counter);
            counter++;
        });
        if (counter == 2) {
            $('#MultiRecordList').find('.remove').hide()
        }
        else {
            $('#MultiRecordList').find('.remove').show()
        }
    }
    TableHeadderHide()
    function TableHeadderHide() {
        if ($('#multirecodtable > tbody').find('tr').length == 0) {
            $('#multirecodtable').hide();
        } else {
            SnoCounter();
        }
    }
</script>

@*cascading in multilist*@
<script>
    $('#personaldetails').on('change', '.pradesh', function () {
        var tr = $(this).closest('tr')
        Cascading(tr,'itemState')
    });
    $('#personaldetails').on('change', '.jilla', function () {
        var tr = $(this).closest('tr')
        Cascading(tr, 'itemDistrict')
    });
    function Cascading(tr, change) {
        debugger;
        var itemState = $(tr).find('.pradesh');
        var itemDistrict = $(tr).find('.jilla');
        var itemPalika = $(tr).find('.palika');
        var href = '/AjaxRequest/';
        if (change=='itemState') {
            href += 'GetDistrict/' + $(itemState).val();
            $.ajax({
                url: href,
                success: function (data) {
                    debugger;
                    var items = [];
                    items.push("<option  value=0 >" + "-जिल्ला छान्नुहोस्-" + "</option>"); //first item
                    for (var i = 0; i < data.length; i++) {
                        items.push("<option value=" + data[i].Value + ">" + data[i].Text + "</option>");
                    }                                         //all data from the team table push into array
                    $(itemDistrict).html(items.join(' '));
                    $(itemPalika).find('option').remove();
                },
                error: function (err) {
                    alert(err);
                }
            })
        }
        else if (change=='itemDistrict') {
            href += 'GetPalika/' + $(itemDistrict).val();
            $.ajax({
                url: href,
                success: function (data) {

                    var items = [];
                    items.push("<option  value=0 >" + "-पालिका छान्नुहोस्-" + "</option>"); //first item
                    for (var i = 0; i < data.length; i++) {
                        items.push("<option value=" + data[i].Value + ">" + data[i].Text + "</option>");
                    }                                         //all data from the team table push into array
                    s(itemPalika).html(items.join(' '));

                },
                error: function (err) {
                    alert(err);
                }

            })
        }

    }

</script>
